
# Annotation Target

In the following example

  void foo( @Regex("abc") String s )

it is unclear whether @Regex applies to the type (String) or the parameter (s)

Per JLS16$9.7.4, an annotation can be a "declaration annotation" and/or "type annotation".
Indeed, if @Target on @Regex includes both kinds,
the reflection API will treat the annotation as both kinds.
If @Target includes only TYPE_USE, the annotation applies only on the type.

If There's no @Target on @Regex, JLS16 $9.6.4.1 says that it means it includes all contexts.
But this is not the behavior of jdk16, and the JLS is considered wrong, to be fixed later:
    https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8261610

If a enum field is annotated with an anno of @Target=Type_USE, it's not clear what happens.
Javac allows it, so it appears that it applies on the type of the field.
But field.getAnnotatedType() does not contain the anno.
And field.getDeclaredAnnotations() does contain the anno.


# @Ctor on constructor

@Ctor is applied mostly to static factory methods in datatype classes.

@Ctor on constructors seems not that useful; we can always use factory methods instead.
But, for the story telling, it's easier to go
    canonical constructor -> @Ctor constructor -> @Ctor method -> ctor catalog
so we keep this feature, allow @Ctor on constructors.
